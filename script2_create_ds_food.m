%% This script creates a ds structure necessary to perform univariate and multivariate analsys (CosmoMVPA style)

clear, clc, clear all
config=cosmo_config();

%% Load data
subjs =  {'sub01', 'sub02', 'sub03', 'sub04', 'sub05', 'sub06', 'sub07', 'sub08', 'sub09', 'sub10', 'sub11', 'sub12', 'sub13', 'sub14', ...
    'sub16', 'sub17', 'sub18', 'sub19'};
% participant 15 was excluded due to excessive head motion
numSubjs = size(subjs, 2);

%% retrieve rois files name and paths
% ROI files
for i = 1:40 %number of sphere generated by the vector-of-ROIs
    naROI{i} = ['roi_sphere', num2str(i)];
end

nameROIs = numel(naROI);
ROI = cell(1, nameROIs);

for i = 1:nameROIs
    ROI{i} = [naROI{i}, '.nii'];
end

numROIs = numel(ROI); % Get the number of elements in ROI

% set your paths
study_path=fullfile('path\results\'); % path to the SPM file for each participant
mask_path=fullfile('path\spheres\'); % path to the spheres generates with script1
results_path=fullfile('path\ds\'); % output path

for s = 1:numSubjs
    for r = 1:numROIs
        
        data_path=fullfile([study_path, subjs{s} ]); %data
        mask_fn=fullfile([mask_path, ROI{r}]); % ROI
        
%% Set Desing 
% Targets = number of conditions (n=10) % original design included 3
% conditions not analyzed in the present paper. We will subsequently
% exclude those from analysis
% Chunks = number of runs (n=8)

%% *Create your targets (conditions order) and chunks (runs order)*        
        data_fn=fullfile(data_path,'SPM.mat');

    if ismember(subjs{s}, {'sub07'}) %this participants had less runs (7/8)
        num_runs = 7;
        num_trials = 70;
    elseif ismember(subjs{s}, {'sub03', 'sub11', 'sub16'}) %these participants had less runs (6/8)
        num_runs = 6;
        num_trials = 60;
    else
        num_runs = 8;
        num_trials = 80;
    end
        % Create targets and chunks dynamically
        targets = repmat(1:10, 1, num_runs); %10 = number of categories
        chunks = floor(((1:num_trials) - 1) / 8) + 1;

        %Generate COSMO DS structure  
        ds = cosmo_fmri_dataset(data_fn, 'mask', mask_fn, 'targets', targets, 'chunks', chunks);
        
        %% Check to ensure all attributes are set properly
        cosmo_check_dataset(ds);
        
        %% print dataset
        fprintf('Dataset input:\n');
        cosmo_disp(ds);

        %% remove constant features
        ds=cosmo_remove_useless_data(ds);
        
        %% print dataset
        fprintf('Dataset input:\n');
        cosmo_disp(ds);
        
%% Save Data        
       
        name_file=fullfile([results_path, subjs{s}, '_' naROI{r} '_ds']);
        save (name_file, 'ds');
    end
end